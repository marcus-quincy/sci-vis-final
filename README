Star Cluster Visualization
----------

The purpose of this project is to create a visualization of Star Cluster
Simulations data set on Kaggle
(https://www.kaggle.com/datasets/mariopasquato/star-cluster-simulations/data).

The main tools used for this are ParaView (https://www.paraview.org/) and
python.

Some of the main goals of the project are to analyze which stars escape and also
gain a better visualization of the sparse data set.


Description of files in this repo
----------

animations/
    Directory containing various video animations of the data.

csvs/
    data/
        Directory containing the original data (with .bak extension), the and
        the results of running the preprocess script both with separating the
        escapees out, and with standard preprocessing. This directory can be
        used as input to escapeesColor.pvsm.
    escaped-interpolated/
        Directory containing the csvs which are the output of running the
        cubic-interpolation script. This directory can be in input to
        escapee-cubic-interpolated.pvsm.
    splitData/
        Directory containing data split into two groups: one with ID and one
        without. The data here is input to escapeeSpeed.pvsm and
        EscapeesTemporalInterpolated.pvsm.

stateFiles/
    escapee-cubic-interpolated.pvsm
        ParaView state file for creating an animation of the escaped stars with
        cubic interpolation. Expects data to be preprocessed by
        cubic-interpolation script first.
        TODO: put exact command to do this
    subset-cubic-interpolation-animated.pvsm
        ParaView state file for creating an animation of random stars with cubic
        interpolation. Expects data to be preprocessed by cubic-interpolation
        script first.
    escapeesColor.pvsm
        ParaView state file coloring escaped stars green through all the time
        steps. Requires escapees to be separated using preprocess script first.
    escapeeSpeed.pvsm
        ParaView state file which analyzes the speeds of the stars that escape.
        Requires data to be processed by Split.py first.
    EscapeesTemporalInterpolated.pvsm
        State file with just the stars that escape and uses Temporal
        Interpolation to visualize their movements. Requires data to be
        processed by Split.py first.
    temporalInterpolator.pvsm
        State file with temporal interpolation applied to the entire data set.
        Uses the base data set.

python/
    Centroid.py
        Uses data processed by fixMissingIds.py or preprocess as input. This
        script calculates the mean of all the data for visualization.
    cubic-interpolation
        Takes the output of preprocess script as input. This script takes the
        data and outputs a data set with more time steps with cubic
        interpolation applied.
    fixMissingIds.py
        Adds id's to the data to compensate for all the stars missing data.
    speedPlot.py
        Plots the speeds of the stars in relation to the time steps.
    Split.py
        Splits the data into escapees and nonescapees.
